/*
 * This source file was generated by the Gradle 'init' task
 */

package elderwood.experiments;

import elderwood.experiments.handler.BlockHandlerRegistry;
import elderwood.experiments.handler.EventHandlerRegistry;
import elderwood.experiments.monitoring.BasicResourceMonitor;
// import elderwood.experiments.world.AnvilEntityLoader;
import lombok.extern.slf4j.Slf4j;
import net.minestom.server.MinecraftServer;
import net.minestom.server.coordinate.Pos;
import net.minestom.server.event.GlobalEventHandler;
import net.minestom.server.event.player.PlayerChunkUnloadEvent;
import net.minestom.server.extras.MojangAuth;
import net.minestom.server.instance.InstanceContainer;
import net.minestom.server.instance.InstanceManager;
import net.minestom.server.instance.anvil.AnvilLoader;
import net.minestom.server.instance.block.Block;

@Slf4j
public class App {

  // public static final Pos SPAWN = new Pos(373.5f, 76.0f, 3252.5f); // Osliget
  // SPAWN
  // public static final Pos SPAWN = new Pos(1.5f, 71.0f, 3.5f); // DEBUG SPAWN
  public static final Pos SPAWN = new Pos(17.5f, 65.0f, -30.5f); // PAINTING DEBUG SPAWN
  private static final Integer SPAWN_RADIUS = 8;

  public static final String WORLD_PATH = "worlds/gallery";
  // public static final String WORLD_PATH = "worlds/main/Osliget";

  public static InstanceManager instanceManager;
  public static InstanceContainer instanceContainer;

  public static void main(String[] args) {
    System.setProperty("minestom.chunk-view-distance", "16");

    final MinecraftServer minecraftServer = MinecraftServer.init();
    log.info("MC version: {}", MinecraftServer.VERSION_NAME);
    MinecraftServer.setBrandName("Elderwood Experiments");

    MojangAuth.init();

    // Create the instance
    instanceManager = MinecraftServer.getInstanceManager();
    instanceContainer = instanceManager.createInstanceContainer();

    BlockHandlerRegistry.registerAllHandlers();

    BasicResourceMonitor.addMonitor();

    var mainWorldLoader = new AnvilLoader("worlds/main/Osliget");
    // var mainWorldLoader = new AnvilEntityLoader("worlds/debug");

    instanceContainer.setChunkLoader(mainWorldLoader);
    instanceContainer.setTimeRate(0);

    // Set the ChunkGenerator
    instanceContainer.setGenerator(unit -> unit.modifier().fill(Block.AIR));

    for (int x = -SPAWN_RADIUS; x <= SPAWN_RADIUS; x++) {
      for (int z = -SPAWN_RADIUS; z <= SPAWN_RADIUS; z++) {
        instanceContainer.loadChunk(SPAWN.chunkX() + x, SPAWN.chunkZ() + z);
      }
    }

    GlobalEventHandler globalEventHandler = MinecraftServer.getGlobalEventHandler();

    EventHandlerRegistry.registerAllHandlers(globalEventHandler);

    globalEventHandler.addListener(PlayerChunkUnloadEvent.class, e -> {
      try {
        var chunk = e.getInstance().getChunk(e.getChunkX(), e.getChunkZ());
        if (chunk == null)
          return;
        if (chunk.getViewers().size() == 0)
          e.getInstance().unloadChunk(e.getChunkX(), e.getChunkZ());
      } catch (Exception ignored) {
      }
    });

    minecraftServer.start("0.0.0.0", 25565);
  }
}
